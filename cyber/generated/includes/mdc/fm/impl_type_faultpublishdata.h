/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2021. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef MDC_FM_IMPL_TYPE_FAULTPUBLISHDATA_H
#define MDC_FM_IMPL_TYPE_FAULTPUBLISHDATA_H
#include <cfloat>
#include <cmath>
#include "impl_type_uint32.h"
#include "impl_type_uint16.h"
#include "impl_type_string.h"

namespace mdc {
namespace fm {
struct FaultPublishData {
    ::UInt32 faultId;
    ::UInt16 faultStatus;
    ::String faultDesc;

    static bool IsPlane()
    {
        return false;
    }


    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(faultId);
        fun(faultStatus);
        fun(faultDesc);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(faultId);
        fun(faultStatus);
        fun(faultDesc);
    }

    bool operator == (const ::mdc::fm::FaultPublishData& t) const
    {
        return (faultId == t.faultId) && (faultStatus == t.faultStatus) && (faultDesc == t.faultDesc);
    }
};
} // namespace fm
} // namespace mdc


#endif // MDC_FM_IMPL_TYPE_FAULTPUBLISHDATA_H
