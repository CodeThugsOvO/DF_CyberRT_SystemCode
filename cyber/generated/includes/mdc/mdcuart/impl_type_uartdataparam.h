/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2021. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef MDC_MDCUART_IMPL_TYPE_UARTDATAPARAM_H
#define MDC_MDCUART_IMPL_TYPE_UARTDATAPARAM_H
#include <cfloat>
#include <cmath>
#include "impl_type_uint8.h"
#include "mdc/mdcuart/impl_type_systemtime.h"
#include "impl_type_uint16.h"
#include "mdc/mdcuart/impl_type_uartdata.h"

namespace mdc {
namespace mdcuart {
struct UartDataParam {
    ::UInt8 seq;
    ::mdc::mdcuart::Systemtime timeStamp;
    ::UInt16 validLen;
    ::mdc::mdcuart::UartData data;

    static bool IsPlane()
    {
        return false;
    }


    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(seq);
        fun(timeStamp);
        fun(validLen);
        fun(data);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(seq);
        fun(timeStamp);
        fun(validLen);
        fun(data);
    }

    bool operator == (const ::mdc::mdcuart::UartDataParam& t) const
    {
        return (seq == t.seq) && (timeStamp == t.timeStamp) && (validLen == t.validLen) && (data == t.data);
    }
};
} // namespace mdcuart
} // namespace mdc


#endif // MDC_MDCUART_IMPL_TYPE_UARTDATAPARAM_H
