/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2021. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef MDC_MCUGPIO_IMPL_TYPE_GPIOMSGDATAPARAM_H
#define MDC_MCUGPIO_IMPL_TYPE_GPIOMSGDATAPARAM_H
#include <cfloat>
#include <cmath>
#include "impl_type_uint8.h"
#include "mdc/mcugpio/impl_type_systemtime.h"
#include "mdc/mcugpio/impl_type_elementlist.h"
#include "impl_type_uint32.h"

namespace mdc {
namespace mcugpio {
struct GpioMsgDataParam {
    ::UInt8 seq;
    ::mdc::mcugpio::Systemtime timeStamp;
    ::mdc::mcugpio::ElementList elementList;
    ::UInt32 checkSum;

    static bool IsPlane()
    {
        return false;
    }


    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(seq);
        fun(timeStamp);
        fun(elementList);
        fun(checkSum);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(seq);
        fun(timeStamp);
        fun(elementList);
        fun(checkSum);
    }

    bool operator == (const ::mdc::mcugpio::GpioMsgDataParam& t) const
    {
        return (seq == t.seq) && (timeStamp == t.timeStamp) && (elementList == t.elementList) && (checkSum == t.checkSum);
    }
};
} // namespace mcugpio
} // namespace mdc


#endif // MDC_MCUGPIO_IMPL_TYPE_GPIOMSGDATAPARAM_H
