/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2021. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef IMPL_TYPE_EVENTASYNCIMAGE_H
#define IMPL_TYPE_EVENTASYNCIMAGE_H
#include <cfloat>
#include <cmath>
#include "impl_type_int32.h"
#include "impl_type_eventasyncpointdata.h"
#include "impl_type_string.h"
#include "impl_type_eventasyncimageheader.h"

struct EventAsyncImage {
    ::Int32 frameType;
    ::Int32 height;
    ::Int32 width;
    ::Int32 dateSize;
    ::EventAsyncPointData rawData;
    ::String imageFormat;
    ::EventAsyncImageHeader header;

    static bool IsPlane()
    {
        return false;
    }


    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(frameType);
        fun(height);
        fun(width);
        fun(dateSize);
        fun(rawData);
        fun(imageFormat);
        fun(header);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(frameType);
        fun(height);
        fun(width);
        fun(dateSize);
        fun(rawData);
        fun(imageFormat);
        fun(header);
    }

    bool operator == (const ::EventAsyncImage& t) const
    {
        return (frameType == t.frameType) && (height == t.height) && (width == t.width) && (dateSize == t.dateSize) && (rawData == t.rawData) && (imageFormat == t.imageFormat) && (header == t.header);
    }
};


#endif // IMPL_TYPE_EVENTASYNCIMAGE_H
