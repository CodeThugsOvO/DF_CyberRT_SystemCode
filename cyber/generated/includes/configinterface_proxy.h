/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.
 * Generated by Persistency-Generator
 */

#ifndef _CONFIGINTERFACE_PROXY_H   
#define _CONFIGINTERFACE_PROXY_H

#include "ara/per/key_value_storage.h"
#include "ara/per/serializer.h"
class ConfigInterfaceProxy {
public:
    static ConfigInterfaceProxy& GetInstance() noexcept
    {
        static ConfigInterfaceProxy instance;
        if (!instance.kvs) {
            const ara::core::StringView port = "KeyValueStoragePort";
            auto result = ara::per::OpenKeyValueStorage(port);
            if (result.HasValue()) {
                instance.kvs = std::move(result).Value();
            }
        }
        return instance;
    }
    ~ConfigInterfaceProxy() = default;
private:
    ara::per::UniqueHandle<ara::per::KeyValueStorage> kvs;
    ConfigInterfaceProxy() = default;
};

#endif // _CONFIGINTERFACE_PROXY_H
